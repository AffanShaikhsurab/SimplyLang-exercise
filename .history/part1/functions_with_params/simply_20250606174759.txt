        if self.current_token.type == lexer.TT_IDENTIFIER:
            variable = temp
            function_name = self.current_token
            if self.tokens[self.index + 1].type == lexer.TT_LP:
                self.advance()
                parameters = []
                if self.is_class:
                    if function_name.value not in self.classFunctionNames:
                        return res.failure(
                            lexer.InvalidSyntaxError(
                                f"-- Function Name {function_name.value} not defined",
                                function_name.start,
                                function_name.end,
                            )
                        )
                else:
                    if function_name.value not in self.functionNames:
                        return res.failure(
                            lexer.InvalidSyntaxError(
                                f"-- Function Name {function_name.value} not defined",
                                function_name.start,
                                function_name.end,
                            )
                        )
                self.advance()
                while self.current_token.type != lexer.TT_RP:
                    if self.current_token.type == lexer.TT_NEWLINE:
                        res.failure(
                            lexer.InvalidSyntaxError(
                                "Expected )", function_name.start, function_name.end
                            )
                        )

                    if self.current_token.type == lexer.TT_IDENTIFIER:
                        if self.current_token.value not in self.variables:
                            return res.failure(
                                lexer.InvalidSyntaxError(
                                    f"Variable Name {function_name.value} not defined",
                                    function_name.start,
                                    function_name.end,
                                )
                            )

                    parameters.append(self.current_token.value)

                    self.advance()

                    self.skip_commas(res)

                self.advance()
                res.register_advance()

                self.variables.append(variable.value)
                if self.is_class == True:
                    self.is_class = False
                    return res.success(
                        FunctionCallNode(function_name.value, function_name, parameters)
                    )
                else:
                    return res.success(
                        VariableFunctionNode(
                            variable,
                            FunctionCallNode(
                                function_name.value, function_name, parameters
                            ),
                        )
                    )